<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yh.mapper.AssessLogMapper">
    <resultMap id="BaseResultMap" type="com.yh.entity.AssessLog">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="sch_id" property="schId" jdbcType="BIGINT"/>
        <result column="class_id" property="classId" jdbcType="BIGINT"/>
        <result column="tch_id" property="tchId" jdbcType="BIGINT"/>
        <result column="stu_id" property="stuId" jdbcType="BIGINT"/>
        <result column="item_id" property="itemId" jdbcType="BIGINT"/>
        <result column="tag_id" property="tagId" jdbcType="VARCHAR"/>
        <result column="assess_src" property="assessSrc" jdbcType="TINYINT"/>
        <result column="assess_type" property="assessType" jdbcType="TINYINT"/>
        <result column="assess_num" property="assessNum" jdbcType="TINYINT"/>
        <result column="assess_score" property="assessScore" jdbcType="TINYINT"/>
        <result column="assess_time" property="assessTime" jdbcType="TIMESTAMP"/>
        <result column="date_week" property="dateWeek" jdbcType="INTEGER"/>
        <result column="date_month" property="dateMonth" jdbcType="INTEGER"/>
        <result column="date_day" property="dateDay" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP"/>
        <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, sch_id, class_id, tch_id, stu_id, item_id, tag_id, assess_src, assess_type, assess_num, 
    assess_score, assess_time, date_week, date_month, date_day, status, created_dt, updated_dt
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from eval_assess_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from eval_assess_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yh.entity.AssessLog">
    insert into eval_assess_log (id, sch_id, class_id, 
      tch_id, stu_id, item_id, 
      tag_id, assess_src, assess_type, 
      assess_num, assess_score, assess_time, 
      date_week, date_month, date_day, 
      status, created_dt, updated_dt
      )
    values (#{id,jdbcType=BIGINT}, #{schId,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT}, 
      #{tchId,jdbcType=BIGINT}, #{stuId,jdbcType=BIGINT}, #{itemId,jdbcType=BIGINT}, 
      #{tagId,jdbcType=VARCHAR}, #{assessSrc,jdbcType=TINYINT}, #{assessType,jdbcType=TINYINT}, 
      #{assessNum,jdbcType=TINYINT}, #{assessScore,jdbcType=TINYINT}, #{assessTime,jdbcType=TIMESTAMP}, 
      #{dateWeek,jdbcType=INTEGER}, #{dateMonth,jdbcType=INTEGER}, #{dateDay,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{createdDt,jdbcType=TIMESTAMP}, #{updatedDt,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.yh.entity.AssessLog" useGeneratedKeys="true" keyProperty="id">
        insert into eval_assess_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="schId != null">
                sch_id,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="tchId != null">
                tch_id,
            </if>
            <if test="stuId != null">
                stu_id,
            </if>
            <if test="itemId != null">
                item_id,
            </if>
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="assessSrc != null">
                assess_src,
            </if>
            <if test="assessType != null">
                assess_type,
            </if>
            <if test="assessNum != null">
                assess_num,
            </if>
            <if test="assessScore != null">
                assess_score,
            </if>
            <if test="assessTime != null">
                assess_time,
            </if>
            <if test="dateWeek != null">
                date_week,
            </if>
            <if test="dateMonth != null">
                date_month,
            </if>
            <if test="dateDay != null">
                date_day,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createdDt != null">
                created_dt,
            </if>
            <if test="updatedDt != null">
                updated_dt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="schId != null">
                #{schId,jdbcType=BIGINT},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=BIGINT},
            </if>
            <if test="tchId != null">
                #{tchId,jdbcType=BIGINT},
            </if>
            <if test="stuId != null">
                #{stuId,jdbcType=BIGINT},
            </if>
            <if test="itemId != null">
                #{itemId,jdbcType=BIGINT},
            </if>
            <if test="tagId != null">
                #{tagId,jdbcType=VARCHAR},
            </if>
            <if test="assessSrc != null">
                #{assessSrc,jdbcType=TINYINT},
            </if>
            <if test="assessType != null">
                #{assessType,jdbcType=TINYINT},
            </if>
            <if test="assessNum != null">
                #{assessNum,jdbcType=TINYINT},
            </if>
            <if test="assessScore != null">
                #{assessScore,jdbcType=TINYINT},
            </if>
            <if test="assessTime != null">
                #{assessTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dateWeek != null">
                #{dateWeek,jdbcType=INTEGER},
            </if>
            <if test="dateMonth != null">
                #{dateMonth,jdbcType=INTEGER},
            </if>
            <if test="dateDay != null">
                #{dateDay,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createdDt != null">
                #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedDt != null">
                #{updatedDt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yh.entity.AssessLog">
        update eval_assess_log
        <set>
            <if test="schId != null">
                sch_id = #{schId,jdbcType=BIGINT},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=BIGINT},
            </if>
            <if test="tchId != null">
                tch_id = #{tchId,jdbcType=BIGINT},
            </if>
            <if test="stuId != null">
                stu_id = #{stuId,jdbcType=BIGINT},
            </if>
            <if test="itemId != null">
                item_id = #{itemId,jdbcType=BIGINT},
            </if>
            <if test="tagId != null">
                tag_id = #{tagId,jdbcType=VARCHAR},
            </if>
            <if test="assessSrc != null">
                assess_src = #{assessSrc,jdbcType=TINYINT},
            </if>
            <if test="assessType != null">
                assess_type = #{assessType,jdbcType=TINYINT},
            </if>
            <if test="assessNum != null">
                assess_num = #{assessNum,jdbcType=TINYINT},
            </if>
            <if test="assessScore != null">
                assess_score = #{assessScore,jdbcType=TINYINT},
            </if>
            <if test="assessTime != null">
                assess_time = #{assessTime,jdbcType=TIMESTAMP},
            </if>
            <if test="dateWeek != null">
                date_week = #{dateWeek,jdbcType=INTEGER},
            </if>
            <if test="dateMonth != null">
                date_month = #{dateMonth,jdbcType=INTEGER},
            </if>
            <if test="dateDay != null">
                date_day = #{dateDay,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createdDt != null">
                created_dt = #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedDt != null">
                updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yh.entity.AssessLog">
    update eval_assess_log
    set sch_id = #{schId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=BIGINT},
      tch_id = #{tchId,jdbcType=BIGINT},
      stu_id = #{stuId,jdbcType=BIGINT},
      item_id = #{itemId,jdbcType=BIGINT},
      tag_id = #{tagId,jdbcType=VARCHAR},
      assess_src = #{assessSrc,jdbcType=TINYINT},
      assess_type = #{assessType,jdbcType=TINYINT},
      assess_num = #{assessNum,jdbcType=TINYINT},
      assess_score = #{assessScore,jdbcType=TINYINT},
      assess_time = #{assessTime,jdbcType=TIMESTAMP},
      date_week = #{dateWeek,jdbcType=INTEGER},
      date_month = #{dateMonth,jdbcType=INTEGER},
      date_day = #{dateDay,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      created_dt = #{createdDt,jdbcType=TIMESTAMP},
      updated_dt = #{updatedDt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <insert id="insertBatch" parameterType="java.util.List">
        insert into eval_event_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            sch_id,
            class_id,
            tch_id,
            stu_id,
            item_id,
            tag_id,
            assess_src,
            assess_type,
            assess_num,
            assess_score,
            assess_time,
            date_week,
            date_month,
            date_day,
            status,
            created_dt,
            updated_dt
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{item.id,jdbcType=BIGINT},
                #{item.schId,jdbcType=BIGINT},
                #{item.classId,jdbcType=BIGINT},
                #{item.tchId,jdbcType=BIGINT},
                #{item.stuId,jdbcType=BIGINT},
                #{item.itemId,jdbcType=BIGINT},
                #{item.tagId,jdbcType=VARCHAR},
                #{item.assessSrc,jdbcType=TINYINT},
                #{item.assessType,jdbcType=TINYINT},
                #{item.assessNum,jdbcType=TINYINT},
                #{item.assessScore,jdbcType=TINYINT},
                #{item.assessTime,jdbcType=TIMESTAMP},
                #{item.dateWeek,jdbcType=INTEGER},
                #{item.dateMonth,jdbcType=INTEGER},
                #{item.dateDay,jdbcType=INTEGER},
                #{item.status,jdbcType=TINYINT},
                #{item.createdDt,jdbcType=TIMESTAMP},
                #{item.updatedDt,jdbcType=TIMESTAMP}
            </trim>
        </foreach>
    </insert>

    <insert id="insertBatchSelective" parameterType="java.util.List">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="assessLogs[0].id != null">
                id,
            </if>
            <if test="assessLogs[0].schId != null">
                sch_id,
            </if>
            <if test="assessLogs[0].classId != null">
                class_id,
            </if>
            <if test="assessLogs[0].tchId != null">
                tch_id,
            </if>
            <if test="assessLogs[0].stuId != null">
                stu_id,
            </if>
            <if test="assessLogs[0].itemId != null">
                item_id,
            </if>
            <if test="assessLogs[0].tagId != null">
                tag_id,
            </if>
            <if test="assessLogs[0].assessSrc != null">
                assess_src,
            </if>
            <if test="assessLogs[0].assessType != null">
                assess_type,
            </if>
            <if test="assessLogs[0].assessNum != null">
                assess_num,
            </if>
            <if test="assessLogs[0].assessScore != null">
                assess_score,
            </if>
            <if test="assessLogs[0].assessTime != null">
                assess_time,
            </if>
            <if test="assessLogs[0].dateWeek != null">
                date_week,
            </if>
            <if test="assessLogs[0].dateMonth != null">
                date_month,
            </if>
            <if test="assessLogs[0].dateDay != null">
                date_day,
            </if>
            <if test="assessLogs[0].status != null">
                status,
            </if>
            <if test="assessLogs[0].createdDt != null">
                created_dt,
            </if>
            <if test="assessLogs[0].updatedDt != null">
                updated_dt,
            </if>
        </trim>
        values
        <foreach collection="list" item="item" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="assessLogs[0].id != null">
                    #{item.id,jdbcType=BIGINT},
                </if>
                <if test="assessLogs[0].schId != null">
                    #{item.schId,jdbcType=BIGINT},
                </if>
                <if test="assessLogs[0].classId != null">
                    #{item.classId,jdbcType=BIGINT},
                </if>
                <if test="assessLogs[0].tchId != null">
                    #{item.tchId,jdbcType=BIGINT},
                </if>
                <if test="assessLogs[0].stuId != null">
                    #{item.stuId,jdbcType=BIGINT},
                </if>
                <if test="assessLogs[0].itemId != null">
                    #{item.itemId,jdbcType=BIGINT},
                </if>
                <if test="assessLogs[0].tagId != null">
                    #{item.tagId,jdbcType=VARCHAR},
                </if>
                <if test="assessLogs[0].assessSrc != null">
                    #{item.assessSrc,jdbcType=TINYINT},
                </if>
                <if test="assessLogs[0].assessType != null">
                    #{item.assessType,jdbcType=TINYINT},
                </if>
                <if test="assessLogs[0].assessNum != null">
                    #{item.assessNum,jdbcType=TINYINT},
                </if>
                <if test="assessLogs[0].assessScore != null">
                    #{item.assessScore,jdbcType=TINYINT},
                </if>
                <if test="assessLogs[0].assessTime != null">
                    #{item.assessTime,jdbcType=TIMESTAMP},
                </if>
                <if test="assessLogs[0].dateWeek != null">
                    #{item.dateWeek,jdbcType=INTEGER},
                </if>
                <if test="assessLogs[0].dateMonth != null">
                    #{item.dateMonth,jdbcType=INTEGER},
                </if>
                <if test="assessLogs[0].dateDay != null">
                    #{item.dateDay,jdbcType=INTEGER},
                </if>
                <if test="assessLogs[0].status != null">
                    #{item.status,jdbcType=TINYINT},
                </if>
                <if test="assessLogs[0].createdDt != null">
                    #{item.createdDt,jdbcType=TIMESTAMP},
                </if>
                <if test="assessLogs[0].updatedDt != null">
                    #{item.updatedDt,jdbcType=TIMESTAMP},
                </if>
            </trim>
        </foreach>
    </insert>

    <select id="getStudentStatistics" parameterType="java.lang.Long" resultType="com.yh.entity.wrap.StudentStatistics">
        SELECT
            c.class_no classNo,
            c.class_year grade,
            c.class_name className,
            stu.stu_no stuNo,
            stu.stu_name stuName,
            stu.stu_nickname stuNickname,
            SUM( CASE WHEN al.assess_type = 0 THEN assess_score ELSE 0 END ) award,
            SUM( CASE WHEN al.assess_type = 1 THEN assess_score ELSE 0 END ) deduct,
            SUM( CASE WHEN al.assess_type = 1 THEN ( 0 - al.assess_score ) ELSE al.assess_score END ) total
        FROM
            eval_assess_log al
            INNER JOIN eval_assess_item ai ON al.item_id = ai.id
            INNER JOIN base_student stu ON stu.id = al.stu_id
            INNER JOIN base_class c ON c.id = al.class_id
        WHERE
            al.`status` = 0
            <if test="module != null and module == 1">
                AND al.class_id = #{classId}
            </if>
            <if test="module != null and module == 2">
                AND c.class_year=#{classYear}
            </if>
            <if test="module != null and module == 3">
                AND al.stu_id=#{classId}
            </if>
            AND al.date_day BETWEEN #{start} AND #{end}
        GROUP BY
            al.stu_id
        <if test="order == 1">
            ORDER BY award DESC
        </if>
        <if test="order == 2">
            ORDER BY deduct DESC
        </if>
        <if test="order == 3">
            ORDER BY total DESC
        </if>
    </select>

    <select id="getClassStatistics" resultType="com.yh.entity.wrap.StudentStatistics">
        SELECT
            c.class_no classNo,
            c.class_year grade,
            c.class_name className,
            SUM( CASE WHEN al.assess_type = 0 THEN assess_score ELSE 0 END ) award,
            SUM( CASE WHEN al.assess_type = 1 THEN assess_score ELSE 0 END ) deduct,
            SUM( CASE WHEN al.assess_type = 1 THEN ( 0 - al.assess_score ) ELSE al.assess_score END ) total
        FROM
            eval_assess_log al
        INNER JOIN eval_assess_item ai ON al.item_id = ai.id
        INNER JOIN base_class c ON al.class_id = c.id
        WHERE
            al.`status` = 0
            AND c.class_year = #{classYear}
            AND al.date_day BETWEEN #{start} AND #{end}
        GROUP BY
            al.class_id,
            c.class_year
        <if test="order == 1">
            ORDER BY award DESC
        </if>
        <if test="order == 2">
            ORDER BY deduct DESC
        </if>
        <if test="order == 3">
            ORDER BY total DESC
        </if>
    </select>

    <select id="getStudentClassGradeStatistics" resultType="com.yh.entity.wrap.ItemPowerStatistics">
        SELECT
            tag.tag_name tagName,
            IFNULL(SUM( CASE WHEN al.assess_type = 0 THEN al.assess_score ELSE 0 END ),0) award,
            IFNULL(SUM( CASE WHEN al.assess_type = 1 THEN al.assess_score ELSE 0 END ),0) deduct,
            IFNULL(SUM( CASE WHEN al.assess_type = 1 THEN ( 0 - al.assess_score ) ELSE al.assess_score END ),0) total
        FROM
            eval_tag tag
            LEFT JOIN eval_assess_log al ON tag.tag_id = LEFT(al.tag_id, LOCATE(',',al.tag_id) -1)
            AND al.date_day BETWEEN #{start} AND #{end}
            <if test="role == 2 or role == 3">
                AND al.tch_id=#{tchId}
            </if>
            <if test="module != null and module == 1">
                AND al.stu_id = #{stuOrClassId}
            </if>
            <if test="module != null and module == 2">
                AND al.class_id = #{stuOrClassId}
            </if>
            AND al.`status` = 0
            AND tag.status = 0
            LEFT JOIN base_class c ON al.class_id = c.id
            <if test="module != null and module == 3">
                AND c.class_year = #{classYear}
            </if>
            LEFT JOIN base_student stu ON stu.id = al.stu_id
        WHERE
            tag.tag_type = 1
        GROUP BY
            tag.tag_id
    </select>

    <resultMap id="itemTimeStatisticsMap" type="com.yh.entity.wrap.ItemTimeStatistics">
        <result column="tagName" property="tagName"/>
        <collection property="itemStatisticsList" ofType="com.yh.entity.wrap.ItemStatistics">
            <result column="time" property="time"/>
            <collection property="itemTimeStatisticsFollowTimes" ofType="com.yh.entity.wrap.ItemTimeStatisticsFollowTime">
                <result column="tagName" property="tagName"/>
                <!--<result column="award" property="award"/>-->
                <!--<result column="deduct" property="deduct"/>-->
                <result column="total" property="total"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getStudentClassGradeStatisticsByTime" resultMap="itemTimeStatisticsMap">
    SELECT
        tag.tag_name tagName,
        <if test = "unit != null and unit ==1" >
            DATE_FORMAT( al.date_day, '%Y-%m-%d' ) time,
        </if>
        <if test = "unit != null and unit ==2" >
            CONCAT( LEFT ( al.date_week, 4 ), '第', RIGHT ( al.date_week, 2 ), '周' ) time,
        </if >
        <if test = "unit != null and unit ==3" >
            CONCAT( LEFT ( al.date_month, 4 ), '第', RIGHT ( al.date_month, 2 ), '月' ) time,
        </if > SUM( CASE WHEN al.assess_type = 0 THEN al.assess_score ELSE 0 END ) award,
        SUM( CASE WHEN al.assess_type = 1 THEN al.assess_score ELSE 0 END ) deduct,
        SUM( CASE WHEN al.assess_type = 1 THEN ( 0 - al.assess_score ) ELSE al.assess_score END ) total
    FROM
        eval_assess_log al
        INNER JOIN eval_tag tag ON tag.id = al.tag_id
        INNER JOIN base_class c ON al.class_id = c.id
    WHERE
        al.`status` = 0
        AND al.sch_id = #{schId}
        AND al.date_day BETWEEN #{start} AND #{end}
        <if test = "role == 2 or role == 3" >
            AND al.tch_id = #{tchId}
        </if >
        <if test = "module != null and module == 1" >
            AND al.stu_id = #{stuOrClassId}
        </if >
        <if test = "module != null and module == 2" >
            AND al.class_id = #{stuOrClassId}
        </if >
        <if test = "module != null and module == 3" >
            AND c.class_year = #{classYear}
        </if >
    GROUP BY
        al.item_id
        <if test = "unit != null and unit ==1" >
            ,al.date_day
        </if >
        <if test = "unit != null and unit ==2" >
            ,al.date_week
        </if >
        <if test = "unit != null and unit ==3" >
            ,al.date_month
        </if >
    </select>

    <select id="getAssessLogBytchId" resultType="com.yh.entity.wrap.AssessFlow">
        select
            al.id,
            t.tch_name tchName,
            c.class_no classNo,
            stu.stu_enrl_year grade,
            c.class_name className,
            stu.stu_name stuName,
            stu.stu_nickname stuNickname,
            ai.item_name itemName,
            al.assess_type assessType,
            al.assess_score assessScore,
            assess_time time
        FROM
            eval_assess_log al
            INNER JOIN eval_assess_item ai ON ai.id = al.item_id
            INNER JOIN base_teacher t ON t.id = al.tch_id
            INNER JOIN base_student stu ON stu.id = al.stu_id
            INNER JOIN base_class c ON c.id = al.class_id
        WHERE
            DATE(assess_time) = #{date}
            <if test="role == 2 or role == 3">
                AND al.tch_id = #{tchId}
            </if>
            <if test="module == 2 and classId != null">
                AND al.class_id = #{classId}
                <if test="role == 1 and cid !=classId">
                    AND al.tch_id = #{tchId}
                </if>
            </if>
            <if test="module == 1 and stuId != null">
                AND al.stu_id = #{stuId}
                <if test="role == 1 and cid !=classId">
                    AND al.tch_id = #{tchId}
                </if>
            </if>
            AND al.`status` = 0
        ORDER BY
            al.assess_time DESC
    </select>
    <select id="getEventLogByAssessId" resultType="com.yh.entity.wrap.AssessFlow">
        SELECT
            el.assess_id id,
            el.event_location eventLocation,
            el.event_note eventNote
        FROM
            eval_event_log el
            INNER JOIN eval_assess_log al ON el.assess_id = al.id
        WHERE
            DATE(event_time) = #{date}
            <if test="module == 2">
                AND al.class_id = #{classId}
            </if>
            <if test="module == 1">
                AND al.stu_id = #{stuId}
            </if>
            AND al.`status` = 0
        ORDER BY
            event_time
    </select>

    <select id="getAssessStatistics" resultType="com.yh.entity.wrap.ItemPowerStatistics">
        SELECT
        stu_enrl_year grade,
        IFNULL(SUM( CASE WHEN al.assess_type = 0 THEN al.assess_score ELSE 0 END ),0) award,
        IFNULL(SUM( CASE WHEN al.assess_type = 1 THEN al.assess_score ELSE 0 END ),0) deduct,
        IFNULL(SUM( CASE WHEN al.assess_type = 1 THEN ( 0 - al.assess_score ) ELSE al.assess_score END ),0) total
        FROM
        eval_tag tag
        LEFT JOIN eval_assess_log al ON tag.tag_id = LEFT(al.tag_id, LOCATE(',',al.tag_id) -1)
        AND al.date_day BETWEEN #{start} AND #{end}
        <if test="stuId != null">
            AND al.stu_id = #{stuId,jdbcType=BIGINT}
        </if>
        AND al.`status` = 0
        AND tag.status = 0
        LEFT JOIN base_class c ON al.class_id = c.id
        LEFT JOIN base_student stu ON stu.id = al.stu_id
        WHERE
            tag.tag_type = 1
    </select>

</mapper>