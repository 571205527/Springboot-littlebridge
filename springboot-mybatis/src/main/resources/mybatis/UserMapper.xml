<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yh.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.yh.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="TINYINT"/>
        <result column="entity_id" property="entityId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP"/>
        <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, user_type, entity_id, username, password, status, created_dt, updated_dt
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yh.entity.User">
    insert into sys_user (id, user_id, user_type, 
      entity_id, username, password, 
      status, created_dt, updated_dt
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{userType,jdbcType=TINYINT}, 
      #{entityId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createdDt,jdbcType=TIMESTAMP}, #{updatedDt,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.yh.entity.User">
        insert into sys_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="entityId != null">
                entity_id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createdDt != null">
                created_dt,
            </if>
            <if test="updatedDt != null">
                updated_dt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=TINYINT},
            </if>
            <if test="entityId != null">
                #{entityId,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createdDt != null">
                #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedDt != null">
                #{updatedDt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yh.entity.User">
        update sys_user
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=TINYINT},
            </if>
            <if test="entityId != null">
                entity_id = #{entityId,jdbcType=BIGINT},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createdDt != null">
                created_dt = #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedDt != null">
                updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yh.entity.User">
    update sys_user
    set user_id = #{userId,jdbcType=VARCHAR},
      user_type = #{userType,jdbcType=TINYINT},
      entity_id = #{entityId,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      created_dt = #{createdDt,jdbcType=TIMESTAMP},
      updated_dt = #{updatedDt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <resultMap id="userRolePrivilegeMap" type="com.yh.entity.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="user_type" property="userType" jdbcType="TINYINT"/>
        <result column="entity_id" property="entityId" jdbcType="BIGINT"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP"/>
        <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP"/>
        <collection property="roles" ofType="com.yh.entity.Role">
            <id column="id" property="id" jdbcType="BIGINT"/>
            <result column="role_id" property="roleId" jdbcType="VARCHAR"/>
            <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
            <result column="status" property="status" jdbcType="TINYINT"/>
            <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP"/>
            <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP"/>
            <collection property="privileges" ofType="com.yh.entity.Privilege">
                <id column="id" property="id" jdbcType="BIGINT"/>
                <result column="priv_id" property="privId" jdbcType="VARCHAR"/>
                <result column="priv_name" property="privName" jdbcType="VARCHAR"/>
                <result column="status" property="status" jdbcType="TINYINT"/>
                <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP"/>
                <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP"/>
            </collection>
        </collection>
    </resultMap>

    <select id="findByUserName" parameterType="java.lang.String" resultMap="userRolePrivilegeMap">
        SELECT
            u.*, r.*, p.*
        FROM
            sys_user u
        INNER JOIN sys_user_role ur ON ur.user_id = u.user_id
        INNER JOIN sys_role r ON r.role_id = ur.role_id
        INNER JOIN sys_role_privilege pr ON pr.role_id = r.role_id
        INNER JOIN sys_privilege p ON pr.priv_id = p.priv_id
        WHERE
            username = #{username}
        AND u.`status` = 0;
    </select>

</mapper>