<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yh.mapper.SignSubjectMapper" >
  <resultMap id="BaseResultMap" type="com.yh.entity.SignSubject" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="sch_id" property="schId" jdbcType="BIGINT" />
    <result column="tch_id" property="tchId" jdbcType="BIGINT" />
    <result column="sub_id" property="subId" jdbcType="BIGINT" />
    <result column="class_id" property="classId" jdbcType="BIGINT" />
    <result column="stu_id" property="stuId" jdbcType="BIGINT" />
    <result column="sign_time" property="signTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, sch_id, tch_id, sub_id, class_id, stu_id, sign_time, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from eval_sign_subject
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from eval_sign_subject
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.yh.entity.SignSubject" >
    insert into eval_sign_subject (id, sch_id, tch_id, 
      sub_id, class_id, stu_id, 
      sign_time, status, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{schId,jdbcType=BIGINT}, #{tchId,jdbcType=BIGINT}, 
      #{subId,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT}, #{stuId,jdbcType=BIGINT}, 
      #{signTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yh.entity.SignSubject" >
    insert into eval_sign_subject
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="schId != null" >
        sch_id,
      </if>
      <if test="tchId != null" >
        tch_id,
      </if>
      <if test="subId != null" >
        sub_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="signTime != null" >
        sign_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="schId != null" >
        #{schId,jdbcType=BIGINT},
      </if>
      <if test="tchId != null" >
        #{tchId,jdbcType=BIGINT},
      </if>
      <if test="subId != null" >
        #{subId,jdbcType=BIGINT},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="signTime != null" >
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yh.entity.SignSubject" >
    update eval_sign_subject
    <set >
      <if test="schId != null" >
        sch_id = #{schId,jdbcType=BIGINT},
      </if>
      <if test="tchId != null" >
        tch_id = #{tchId,jdbcType=BIGINT},
      </if>
      <if test="subId != null" >
        sub_id = #{subId,jdbcType=BIGINT},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=BIGINT},
      </if>
      <if test="signTime != null" >
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yh.entity.SignSubject" >
    update eval_sign_subject
    set sch_id = #{schId,jdbcType=BIGINT},
      tch_id = #{tchId,jdbcType=BIGINT},
      sub_id = #{subId,jdbcType=BIGINT},
      class_id = #{classId,jdbcType=BIGINT},
      stu_id = #{stuId,jdbcType=BIGINT},
      sign_time = #{signTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getSignStatistics" resultType="com.yh.entity.wrap.SignStatistics">
    <if test="role == 0 or role == 1">
      SELECT
        sub_id id,
        sub.sub_name subName,
        COUNT( stu_id ) count
      FROM
        eval_sign_subject ss
        INNER JOIN base_subject sub ON sub.id = ss.sub_id
      WHERE
        DATE(sign_time) BETWEEN DATE(#{start}) AND DATE(#{end})
        <if test="module ==1 and stuId !=null">
          AND stu_id = #{stuId}
          <if test="role == 1 and cid != null">
            AND ss.class_id = #{cid}
          </if>
        </if>
        <if test="module ==2 and classId !=null">
          AND class_id = #{classId}
        </if>
        AND ss.status = 0
      GROUP BY ss.sub_id
    </if>

    <!--<if test="role == 2 or role == 3">
      SELECT
      c.class_name className,
      stu.stu_name stuName,
      COUNT( stu_id ) count
      FROM
      eval_sign_subject ss
      INNER JOIN base_student stu ON stu.id = ss.stu_id
      INNER JOIN base_class c ON c.id = ss.class_id
      WHERE
      tch_id = #{tchId}
      AND sub_id = #{subId}
      <if test="module == 1">
        AND DATE_FORMAT(sign_time,'%Y-%m') = DATE_FORMAT(#{start,jdbcType=VARCHAR},'%Y-%m')
      </if>
      <if test="module == 2 and end != null">
        AND DATE_FORMAT(sign_time,'%Y-%m') BETWEEN DATE_FORMAT(#{start,jdbcType=VARCHAR},'%Y-%m') AND DATE_FORMAT(#{end,jdbcType=VARCHAR},'%Y-%m')
      </if>
      AND ss.STATUS = 0
      GROUP BY ss.stu_id
    </if>-->
  </select>

  <select id="getSubStatistics" resultType="com.yh.entity.wrap.SignStatistics">
    SELECT
      c.class_no classNo,
      stu.stu_enrl_year grade,
      c.class_name className,
      stu.stu_name stuName,
      stu.stu_nickname stuNickname,
      COUNT( stu_id ) count
    FROM
      eval_sign_subject ss
      INNER JOIN base_student stu ON stu.id = ss.stu_id
      INNER JOIN base_class c ON c.id = ss.class_id
    WHERE
      tch_id = #{tchId}
      AND sub_id = #{subId}
      AND DATE(sign_time) BETWEEN DATE(#{start,jdbcType=VARCHAR}) AND DATE(#{end,jdbcType=VARCHAR})
      AND ss.STATUS = 0
    GROUP BY ss.stu_id
    ORDER BY COUNT( stu_id ) DESC
  </select>

  <resultMap id="signMap" type="com.yh.entity.wrap.SignStudentList">
    <result column="signId" property="signId" />
    <result column="signTime" property="signTime" />
    <result column="className" property="className" />
    <collection property="students" ofType="com.yh.entity.Student">
      <id column="id" property="id" jdbcType="INTEGER" />
      <result column="classId" property="classId" jdbcType="INTEGER" />
      <result column="stuName" property="stuName" jdbcType="VARCHAR" />
      <result column="stuNickname" property="stuNickname" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <select id="getSignStudent" resultMap="signMap">
    SELECT
      ss.id signId,
      ss.class_id classId,
      ss.sign_time signTime,
      c.class_name className,
      stu.id,
      stu.stu_name stuName,
      stu.stu_nickname stuNickname
    FROM
      eval_sign_subject ss
      INNER JOIN base_student stu ON stu.id = ss.stu_id
      INNER JOIN base_class c ON c.id = ss.class_id
    WHERE
      ss.tch_id = #{tchId}
      <if test="role != 0">
        AND DATE(ss.sign_time) = DATE(CURRENT_DATE)
      </if>
      <if test="role == 0">
        AND DATE(ss.sign_time) = DATE(#{date})
      </if>
      AND ss.sub_id = #{subId}
      AND ss.STATUS = 0
  </select>

  <select id="getCountSign" resultType="java.lang.Integer">
    SELECT
    count( stu_id )
    FROM
    eval_sign_subject
    WHERE
    DATE( sign_time ) = DATE( CURRENT_DATE )
    AND sub_id = #{subId}
    AND tch_id = #{tchId}
    AND STATUS = 0
  </select>

  <insert id="insertDistinct" parameterType="com.yh.entity.SignSubject" >
    insert into eval_sign_subject (sch_id, tch_id,sub_id, class_id, stu_id,sign_time)
    SELECT #{schId,jdbcType=BIGINT}, #{tchId,jdbcType=BIGINT},#{subId,jdbcType=BIGINT}, #{classId,jdbcType=BIGINT}, #{stuId,jdbcType=BIGINT},#{signTime,jdbcType=TIMESTAMP}
    FROM DUAL
    WHERE
	  NOT EXISTS (
	    SELECT * FROM eval_sign_subject
	    WHERE stu_id = #{stuId,jdbcType=BIGINT}
	      AND DATE( sign_time ) = DATE( CURRENT_DATE ) AND status = 0)
  </insert>
</mapper>