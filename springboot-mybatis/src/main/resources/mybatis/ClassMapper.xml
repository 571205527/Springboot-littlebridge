<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yh.mapper.ClassMapper">
    <resultMap id="BaseResultMap" type="com.yh.entity.Class">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="sch_id" property="schId" jdbcType="BIGINT"/>
        <result column="class_year" property="classYear" jdbcType="SMALLINT"/>
        <result column="class_no" property="classNo" jdbcType="TINYINT"/>
        <result column="class_name" property="className" jdbcType="VARCHAR"/>
        <result column="class_nickname" property="classNickname" jdbcType="VARCHAR"/>
        <result column="class_icon" property="classIcon" jdbcType="VARCHAR"/>
        <result column="brand_icon" property="brandIcon" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="created_dt" property="createdDt" jdbcType="TIMESTAMP"/>
        <result column="updated_dt" property="updatedDt" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, sch_id, class_year, class_no, class_name, class_nickname, class_icon, brand_icon, status,
    created_dt, updated_dt
  </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from base_class
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from base_class
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.yh.entity.Class">
    insert into base_class (id, sch_id, class_year, 
      class_no, class_name, class_nickname, 
      class_icon, brand_icon, status, created_dt,
      updated_dt)
    values (#{id,jdbcType=BIGINT}, #{schId,jdbcType=BIGINT}, #{classYear,jdbcType=SMALLINT}, 
      #{classNo,jdbcType=TINYINT}, #{className,jdbcType=VARCHAR}, #{classNickname,jdbcType=VARCHAR}, 
      #{classIcon,jdbcType=VARCHAR}, #{brandIcon,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createdDt,jdbcType=TIMESTAMP},
      #{updatedDt,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.yh.entity.Class">
        insert into base_class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="schId != null">
                sch_id,
            </if>
            <if test="classYear != null">
                class_year,
            </if>
            <if test="classNo != null">
                class_no,
            </if>
            <if test="className != null">
                class_name,
            </if>
            <if test="classNickname != null">
                class_nickname,
            </if>
            <if test="classIcon != null">
                class_icon,
            </if>
            <if test="brandIcon != null">
                brand_icon,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createdDt != null">
                created_dt,
            </if>
            <if test="updatedDt != null">
                updated_dt,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="schId != null">
                #{schId,jdbcType=BIGINT},
            </if>
            <if test="classYear != null">
                #{classYear,jdbcType=SMALLINT},
            </if>
            <if test="classNo != null">
                #{classNo,jdbcType=TINYINT},
            </if>
            <if test="className != null">
                #{className,jdbcType=VARCHAR},
            </if>
            <if test="classNickname != null">
                #{classNickname,jdbcType=VARCHAR},
            </if>
            <if test="classIcon != null">
                #{classIcon,jdbcType=VARCHAR},
            </if>
            <if test="brandIcon != null">
                #{brandIcon,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createdDt != null">
                #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedDt != null">
                #{updatedDt,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yh.entity.Class">
        update base_class
        <set>
            <if test="schId != null">
                sch_id = #{schId,jdbcType=BIGINT},
            </if>
            <if test="classYear != null">
                class_year = #{classYear,jdbcType=SMALLINT},
            </if>
            <if test="classNo != null">
                class_no = #{classNo,jdbcType=TINYINT},
            </if>
            <if test="className != null">
                class_name = #{className,jdbcType=VARCHAR},
            </if>
            <if test="classNickname != null">
                class_nickname = #{classNickname,jdbcType=VARCHAR},
            </if>
            <if test="classIcon != null">
                class_icon = #{classIcon,jdbcType=VARCHAR},
            </if>
            <if test="brandIcon != null">
                class_icon = #{brandIcon,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createdDt != null">
                created_dt = #{createdDt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedDt != null">
                updated_dt = #{updatedDt,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.yh.entity.Class">
    update base_class
    set sch_id = #{schId,jdbcType=BIGINT},
      class_year = #{classYear,jdbcType=SMALLINT},
      class_no = #{classNo,jdbcType=TINYINT},
      class_name = #{className,jdbcType=VARCHAR},
      class_nickname = #{classNickname,jdbcType=VARCHAR},
      class_icon = #{classIcon,jdbcType=VARCHAR},
      brand_icon = #{brandIcon,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      created_dt = #{createdDt,jdbcType=TIMESTAMP},
      updated_dt = #{updatedDt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <resultMap id="gradeClassStudentsMap" type="com.yh.entity.wrap.GradeClassStudents">
        <result column="classYear" property="grade" />
        <collection property="classStudentses" ofType="com.yh.entity.wrap.ClassStudents">
            <result column="classId" property="classId" jdbcType="BIGINT"/>
            <result column="classYear" property="classYear" jdbcType="SMALLINT"/>
            <result column="classNo" property="classNo" jdbcType="TINYINT"/>
            <result column="className" property="className" jdbcType="VARCHAR"/>
            <result column="classNickName" property="classNickname" jdbcType="VARCHAR"/>
            <result column="classIcon" property="classIcon" jdbcType="VARCHAR"/>
            <collection property="students" ofType="com.yh.entity.Student">
                <id column="stuId" property="id" jdbcType="BIGINT"/>
                <result column="stuNo" property="stuNo" jdbcType="VARCHAR"/>
                <result column="stuName" property="stuName" jdbcType="VARCHAR"/>
                <result column="stuNickname" property="stuNickname" jdbcType="VARCHAR"/>
                <result column="gender" property="gender" jdbcType="TINYINT"/>
                <result column="stuIcon" property="stuIcon" jdbcType="VARCHAR"/>
            </collection>
        </collection>
    </resultMap>

    <select id="getClassStudents" resultMap="gradeClassStudentsMap" parameterType="java.lang.Long">
        SELECT
        cl.id AS classId,
        cl.class_no AS classNo,
        cl.class_year AS classYear,
        cl.class_name AS className,
        cl.class_nickname AS classNickName,
        cl.class_icon AS classIcon,
        st.id AS stuId,
        st.stu_no AS stuNo,
        st.stu_name AS stuName,
        st.stu_nickname AS stuNickname,
        st.gender AS gender,
        st.stu_icon AS stuIcon
        FROM
        base_class cl
        INNER JOIN base_student st ON cl.id = st.class_id
        AND st. STATUS = 0
        WHERE
        cl.sch_id = #{schId}
        AND cl. STATUS = 0
        ORDER BY cl.class_year desc,cl.class_no,st.stu_no
    </select>
<!--    <resultMap id="classMap" type="com.yh.entity.wrap.ClassId">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="className" property="className" jdbcType="VARCHAR"/>
    </resultMap>-->
    <select id="getAllClass" resultType="com.yh.entity.wrap.ClassId">
        SELECT
            id,
            class_year grade,
            class_no classNo,
            class_name className
        FROM
            base_class
        WHERE
            STATUS =0
    </select>
</mapper>